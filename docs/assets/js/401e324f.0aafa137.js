"use strict";(self.webpackChunk_buidlerlabs_hashgraph_venin_docs=self.webpackChunk_buidlerlabs_hashgraph_venin_docs||[]).push([[792],{8936:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>p,contentTitle:()=>r,default:()=>c,frontMatter:()=>s,metadata:()=>d,toc:()=>m});var n=i(7462),a=i(3366),o=(i(7294),i(3905)),l=(i(1839),["components"]),s={id:"file",title:"File"},r=void 0,d={unversionedId:"markdown/guides/entities/file",id:"markdown/guides/entities/file",title:"File",description:"Why?",source:"@site/src.docs/markdown/guides/entities/file.md",sourceDirName:"markdown/guides/entities",slug:"/markdown/guides/entities/file",permalink:"/markdown/guides/entities/file",draft:!1,editUrl:"https://github.com/buidler-labs/hashgraph-venin-docs/edit/main/src.docs/markdown/guides/entities/file.md",tags:[],version:"current",lastUpdatedBy:"Victor Holotescu",lastUpdatedAt:1669214508,formattedLastUpdatedAt:"Nov 23, 2022",frontMatter:{id:"file",title:"File"},sidebar:"docs",previous:{title:"Contract",permalink:"/markdown/guides/entities/contract"},next:{title:"Json",permalink:"/markdown/guides/entities/json"}},p={},m=[{value:"Why?",id:"why",level:3},{value:"Storing some text in a file",id:"storing-some-text-in-a-file",level:3},{value:"Retrieving a file from the network",id:"retrieving-a-file-from-the-network",level:3},{value:"Deleting an online file",id:"deleting-an-online-file",level:3},{value:"Updating a file object",id:"updating-a-file-object",level:3}],u={toc:m};function c(e){var t=e.components,i=(0,a.Z)(e,l);return(0,o.kt)("wrapper",(0,n.Z)({},u,i,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h3",{id:"why"},"Why?"),(0,o.kt)("p",null,"Venin can store generic-content files using Hedera's File Service. This can be anything: from ascii text to binary files. Anything you want to store and are willing to pay Hedera's storage fee, the network will host it."),(0,o.kt)("admonition",{type:"info"},(0,o.kt)("p",{parentName:"admonition"},(0,o.kt)("inlineCode",{parentName:"p"},"LiveFile")," is the basis of ",(0,o.kt)("a",{parentName:"p",href:"/markdown/guides/entities/json"},(0,o.kt)("inlineCode",{parentName:"a"},"LiveJson"))," which is another type of file-content stored on Hedera, one dealing with structured JSON data.")),(0,o.kt)("h3",{id:"storing-some-text-in-a-file"},"Storing some text in a file"),(0,o.kt)("p",null,"An ",(0,o.kt)("inlineCode",{parentName:"p"},"ApiSession")," with this via it's ",(0,o.kt)("inlineCode",{parentName:"p"},"ApiSession.upload")," method like so:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js",metastring:"live=true containerKey=store_a_file",live:"true",containerKey:"store_a_file"},'const { session } = await ApiSession.default();\nconst liveFile = await session.upload(new File("Venin is easy-peasy!"));\n\nlog(`File is stored at ${liveFile.id}`);\nlog(`The live file content is: ${liveFile.data}`);\n')),(0,o.kt)("p",null,"If you don't like the verbose ",(0,o.kt)("inlineCode",{parentName:"p"},"new File(...)")," notation, you can also go for the short-hand equivalent of just providing the string itself to the ",(0,o.kt)("inlineCode",{parentName:"p"},"ApiSession.upload")," method like so: ",(0,o.kt)("inlineCode",{parentName:"p"},'ApiSession.upload("Venin is easy-peasy!")'),". These 2 means are equivalent. Of course, you can do the same for the other ",(0,o.kt)("inlineCode",{parentName:"p"},"Uint8Array")," argument type."),(0,o.kt)("p",null,"If you need to tweak the underlying file-transaction options when storing the content, you can use the ",(0,o.kt)("inlineCode",{parentName:"p"},"upload"),"s meta-arguments. For instance, if you want to add a memo, just pass it a ",(0,o.kt)("inlineCode",{parentName:"p"},'{ _file: { memo: "true facts" } }')," when ",(0,o.kt)("inlineCode",{parentName:"p"},"upload"),"ing, like so:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},'const { session } = await ApiSession.default();\nconst liveFile = await session.upload("Venin is easy-peasy-er!", {\n  _file: { memo: "true facts" },\n});\n\n//...\n')),(0,o.kt)("admonition",{type:"note"},(0,o.kt)("p",{parentName:"admonition"},"The ",(0,o.kt)("inlineCode",{parentName:"p"},"_file")," property is needed when ",(0,o.kt)("inlineCode",{parentName:"p"},"upload"),"ing a file to distinguish it from ",(0,o.kt)("inlineCode",{parentName:"p"},"upload"),"ing contract meta-arguments which also allow for fine-tweaking the ",(0,o.kt)("a",{parentName:"p",href:"https://docs.hedera.com/guides/docs/sdks/smart-contracts/create-a-smart-contract"},(0,o.kt)("inlineCode",{parentName:"a"},"ContractCreateTransaction")," call")," parameters through their own ",(0,o.kt)("inlineCode",{parentName:"p"},"_contract")," property object.")),(0,o.kt)("p",null,"Besides setting a ",(0,o.kt)("inlineCode",{parentName:"p"},"memo")," you can pick and use any other fields that ",(0,o.kt)("a",{parentName:"p",href:"https://docs.hedera.com/guides/docs/sdks/file-storage/create-a-file"},"the ",(0,o.kt)("inlineCode",{parentName:"a"},"FileCreateTransaction")," supports"),"."),(0,o.kt)("h3",{id:"retrieving-a-file-from-the-network"},"Retrieving a file from the network"),(0,o.kt)("p",null,"Although there is no ",(0,o.kt)("inlineCode",{parentName:"p"},"ApiSession.getLiveJson")," equivalent method available to retrieve a ",(0,o.kt)("inlineCode",{parentName:"p"},"LiveFile")," from Hedera (this will be supported ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/buidler-labs/hashgraph-venin-js/issues/58"},"once #58 gets implemented"),"), we do provide a workaround:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"having a ",(0,o.kt)("inlineCode",{parentName:"li"},"FileId")," at hand, manually create a ",(0,o.kt)("inlineCode",{parentName:"li"},"LiveFile")," via its constructor binding it to a working ",(0,o.kt)("inlineCode",{parentName:"li"},"ApiSession")),(0,o.kt)("li",{parentName:"ul"},"call ",(0,o.kt)("inlineCode",{parentName:"li"},"LiveFile.getContents()")," to retrieve it's raw ",(0,o.kt)("inlineCode",{parentName:"li"},"Uint8Array")," content")),(0,o.kt)("h3",{id:"deleting-an-online-file"},"Deleting an online file"),(0,o.kt)("p",null,"To delete a deployed ",(0,o.kt)("inlineCode",{parentName:"p"},"File"),", you have to have the wallet ",(0,o.kt)("inlineCode",{parentName:"p"},"ApiSession")," owner be the owner of the ",(0,o.kt)("inlineCode",{parentName:"p"},"LiveFile")," and then do a ",(0,o.kt)("inlineCode",{parentName:"p"},"LiveFile.deleteEntity()")," call."),(0,o.kt)("admonition",{type:"note"},(0,o.kt)("p",{parentName:"admonition"},"Once deleted, certain operations such as ",(0,o.kt)("inlineCode",{parentName:"p"},"getLiveEntityInfo")," (to extract the content of the file, a chain operation) and, in general, all network-related actions, are no longer available.")),(0,o.kt)("h3",{id:"updating-a-file-object"},"Updating a file object"),(0,o.kt)("p",null,"Updating is easy, just call ",(0,o.kt)("inlineCode",{parentName:"p"},"LiveFile.updateEntity(FileFeatures)")," where ",(0,o.kt)("inlineCode",{parentName:"p"},"FileFeatures")," is an object type defined as:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},"export type FileFeatures = {\n  keys?: KeyList | Key[];\n  expirationTime?: Date;\n  contents?: string | Uint8Array;\n  fileMemo?: string;\n};\n")),(0,o.kt)("p",null,"If you're familiar with Hedera's SDK documentation, this are basically ",(0,o.kt)("a",{parentName:"p",href:"https://docs.hedera.com/guides/docs/sdks/file-storage/update-a-file"},"the available SDK options for updating a file")," on HCS."))}c.isMDXComponent=!0}}]);